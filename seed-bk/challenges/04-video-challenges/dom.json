{
  "name": "The DOM",
  "order": 1,
  "time": "30 minutes",
  "challenges": [
    {
      "id": "56b15f15632298c12f31518f",
      "title": "The DOM: What's the Document Object Model?",
      "description": [
        "DOM 是浏览器的内部，网页的程序化称呼。JavaScript 允许你修改网页的 DOM 结构，因而你就无需编辑网站页面的 HTML。",
        "从技术上讲，DOM 是一种 API（应用编程接口）。有许多类型的 API，但是 DOM 这种特定的 API 是与 XML 和 HTML 文档进行交互的。这是负责如何将这些文件被访问和操纵。",        
        "真的，使用 DOM 你可以做很多事情，如果你已经在用 JS 和 jQuery 编写脚本，你已经在做了。",
        "你可以插入新的东西，元素或者为已经存在的元素改变样式或内容。",
        "这可以用原生的 JavaScript 中的 document.getElementById（id），element.getElementsByTagName（name），或使用 document.createElement（name）来对 DOM 进行操作。",
        "你也可以使用 JS 库如 jQuery 来简化的，标准化和自动化的操纵 DOM，就像这样：$('#box2').append('This will be added to box2!')"
      ],
      "challengeSeed": [
        "139879431"
      ],
      "tests": [
        [
          "The DOM is complex and difficult to access.",
          false,
          "The DOM is easily accessed and manipulated with JavaScript and jQuery."
        ],
        [
          "The DOM is an API that is a part of the browser.",
          true
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f31518e",
      "title": "The DOM: Style in the Header, Script in the Footer",
      "description": [
        "也许你已经被告知了，链接样式表（CSS）应包含在网页的头部（head）和脚本（JS）链接应该包含在页脚。你是否问过自己，为什么要这样子做吗？",
        "如果你见过，首先加载页面文本，然后再去加载格式和css样式的网页，那么你就见过那些，没有把样式（style）和脚本（script）放在正确的地方的网页。",
        "这一切都取决于浏览器是如何判定是否加载了足够的信息来显示页面。这就是所谓的“DOMContentLoaded”事件：一旦事件发生，无论是加载完毕都将显示。",
        "DOM 会告诉浏览器，一旦 HTML 被加载，它就已经准备好了，然而有时 CSS 和 JS 还没有进来。但是，如果你在头部放入 CSS 样式和在页脚中放入 JS 脚本，这样你就可以保证在 DOM 触发“DOMContentLoaded”事件之前，所有内容都将被载入，这个事件会把网页展示给用户。",
        "这是一个简单的解释，因为大多数这些视频都是这样解释的。欲了解更多信息，这是我很喜欢的一个资源：<a href='http://ablogaboutcode.com/2011/06/14/how-javascript-loading-works-domcontentloaded-and-onload' target='_blank'>ablogaboutcode.com/2011/06/14/how-javascript-loading-works-domcontentloaded-and-onload</a>"        
      ],
      "challengeSeed": [
        "139879984"
      ],
      "tests": [
        [
          "Placing the style in the header and the script in the footer ensures the page is loaded for the user as you want it to appear.",
          true
        ],
        [
          "The CSS link should go in the header and the JS link should go in the footer. If you don't do it just that way, the webpage will crash.",
          false,
          "The webpage won't necessarily crash, but it might load in an unattractive or dysfunctional way."
        ]
      ],
      "type": "hike",
      "challengeType": 6
    }
  ]
}