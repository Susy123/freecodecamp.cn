{
  "name": "JavaScript Lingo",
  "order": 2,
  "time": "1 hour",
  "challenges": [
    {
      "id": "56b15f15632298c12f31518c",
      "title": "JavaScript Lingo: MDN and Documentation",
      "description": [
        "这是一个关于 MDN 和文档概念的基本介绍。",
        "MDN (Mozilla Developer Network) 是一个非常棒的开源项目, 里面不仅有 JavaScript 的相关文档, 还有其他语言和主题的文档. 如果你从没有听说过 MDN , 那么你现在应该去体验一下。 我从<a href='http://developer.mozilla.org/en-US/docs/Web/JavaScript' target='_blank'>developer.mozilla.org/en-US/docs/Web/JavaScript</a>中获得了不少帮助。",
        "当我提到 文档 的时候, 我是指提供给用户的产品介绍. MDN  里的文档不完全是JS的开发人员写的. Brendan Eich 于1995年创造了 JS , 但是它现在已经成为一个社区驱动的项目，并且在不断发展。",
        "当你继续学习 JavaScript, jQuery 或其他语言， 以及接触开发或编程服务时，, 文档都是你的好帮手。 ",
        "你查询文档的速度越快，效率越高, 你成为一个合格的开发者的速度也就越快。",
        "这些视频并不是要教你 JavaScript - 而是要介绍给你一些随着你学习的深入会变得更有价值的东西。"
      ],
      "challengeSeed": [
        "137072373"
      ],
      "tests": [
        [
          "文档不是一个学习一门编程语言的好方法。",
          false,
          "Documentation can be your best friend once you learn how to get the most from it.",
          "当你学会充分利用文档的时候，你会发现它真的很有用。"
        ],
        [
          "Mozilla Developer Network 是应该经常查阅的好资源。",
          true
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f31518d",
      "title": "JavaScript Lingo: Value Types",
      "description": [
        "三个最基本的值的类型 booleans（布尔值）, strings（字符串）, and numbers（数值）。",
        "布尔值包含 true （真） 或 false （假） 两种值。 这些字是特殊的并且是保留字。 你不能将一个变量命名为 'true', 因为它已经被普遍地用作了布尔值 ('false' 也一样)。",
        "字符串是一串字符， 它被包含与 (') 或 双引号 (\")  中。 字符串可以被命名为 'true', 只要它在引号之中。",
        "数值是自解释的 —— 一个数值是由数字组成的值, 即使它包含小数或者负号。"
      ],
      "challengeSeed": [
        "137072769"
      ],
      "tests": [
        [
          "数值包含小数。",
          true
        ],
        [
          "如果一个值既不为真，也不为假，那么它是一个字符串。 ",
          false,
          "字符串应该被包含在引号中间。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f31518b",
      "title": "JavaScript Lingo: Variables & camelCase",
      "description": [
        "接下来我们会讲到 变量 和 驼峰 拼写法 ",
        "一个变量(variables)，简写为'var',是布尔值、字符串、或其他静态信息的名字或者占位符。",
        "你可以用谷歌开发工具来检查FCC主页并且寻找变量",
        "你可以在变量前加入'var'来‘声明’它，并在接下来的脚本中引用它。",
        "驼峰拼写法是 JavaScript 拼写字符的一种方式，它有很高的易读性。 单词的第一个字母是小写的, 单词中其他的字母也是, 但是每个连续单词的第一个字母都是大写的。中间没有空格。 例: brianaLovesHerPets, bestFoodIsCheese, and codeIsWorthLearning.",
        "当你声明变量的时候， 使用驼峰拼写法。 并且让变量的命名尽可能的具有描述性和尽可能短，这样别人（还有你）才可以根据名字来判断一个变量是什么"
      ],
      "challengeSeed": [
        "137078492"
      ],
      "tests": [
        [
          "驼峰拼写法在JavaScript中是强制性的。",
          false,
          "即使驼峰拼写法应用广泛，但它并不是强制性的。 尽早习惯使用驼峰拼写法也不是什么坏主意。"
        ],
        [
          "变量只能包含 布尔值、字符串、或数值",
          false,
          "变量可以包含数组和对象在内的各种各样的静态值。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f31518a",
      "title": "JavaScript Lingo: Arrays & Objects",
      "description": [
        "如果你想在一个变量中储存多个信息, 你可以创建一个数组或对象。",
        "**声明: JS 中的对象和其他语言中的对象并不完全一样。 我们将在这里讨论的是JS中的对象。",
        "数组是储存在 [方括号]中的许多数据. 数据由逗号（，）分隔）. 数据可以是布尔值 、字符串、数值，甚至是其他数组。 我们称之为嵌套数组",
        "对象是和数组一样可以以一定的顺序储存许多数据于一个变量中的数据类型。 你以前一定听说过 JSON （JavaScript Object Notation） , 当你向其他网站发起API请求时(请求得到信息来展示在你的页面上) 通常的返回格式都是JSON",
        " JSON 的例子: var obj = {'name' : 'Briana', 'food' : 'cheese', 'dog' : 'Maurice'};",
        "注意那个大括号, name 和 food 被称作‘键’,, 与之对应的则称为‘值’, 如 Briana 和 cheese. 它们都以字符串形式保存, 但是布尔值、数值和其他数据类型也可以"
      ],
      "challengeSeed": [
        "137080554"
      ],
      "tests": [
        [
          "数组很容易辨别，它们包含于[方括号]中 ",
          true
        ],
        [
          "JavaScript 语言中的对象与其他语言中的对象一样。",
          false,
          "JavaScript中的对象有一些轻微的不同, 但只要你理解了JS的上下文, 在你不想学习其他语言的情况下这就足够了。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f315189",
      "title": "JavaScript Lingo: Finding and Indexing Data in Arrays",
      "description": [
        "通常情况下，当你需要在许多数据中查找某个数据时，, 你可以通过索引来找到它。",
        "我们现在不会介绍语法, 但是你应该知道数组中第一个值的索引为0.",
        "这对字符串和对象来说也是， 这些索引都从0开始计数, 所以当你查询indexArr[2]时, 你会得到数组中的第三个值。"
      ],
      "challengeSeed": [
        "137081193"
      ],
      "tests": [
        [
          "数组的第一个索引为1。",
          false,
          "数组的第一个索引为0."
        ],
        [
          "同一个数组中的数据类型必须相同，如：都为布尔值。",
          false,
          "数组可以包含各种不同的数据类型。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f315188",
      "title": "JavaScript Lingo: Manipulating Data",
      "description": [
        "方法和函数可以帮助你处理变量和其他数据。",
        "方法是JavaScript中内置的, 当你在做 bonfires 的时候，会对这些更加熟悉。",
        "我建议你通过 MDN (Mozilla Developer Network that we discussed in the first video) 来熟悉这些方法和其他一些功能。 <a href='http://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Methods_Index' target='_blank'>developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Methods_Index</a>",
        "例如 '.split(' ')'会返回一个字符串数组，并且可以通过多种方式来实现。 方法 是非常强大的- 许多时候，当你需要做某事的时候，总会有个方法来做这件事。",
        "函数，比如：变量，是你定义并创建的东西。",
        "在你在Free Code Camp中的算法实践中, 你会创建一个函数来接收数据并按你的想法处理它。",
        "那时候，你会更熟悉语法， 但是现在，你只要记住，使用方法和函数，你可以做几乎任何事情。"
      ],
      "challengeSeed": [
        "137081423"
      ],
      "tests": [
        [
          "当你想要做任何特定的事情的时候, 你应该在这之前先搜索一下是否有已经存在的方法可以做这件事。",
          true
        ],
        [
          "当编写你自己的函数的时候, 为了保持代码整洁，你应该尽可能少的使用方法。 ",
          false,
          "方法被开发出来就是用来帮助你的， 当你需要的时候，就使用它们。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f315187",
      "title": "JavaScript Lingo: Math",
      "description": [
        "JS中有一个叫作 'Math' 的静态对象，包含许多内置的属性和方法。",
        "当你在处理数值相关的时候，你会想要更深入的了解这些。 在编写你自己的函数之前，搜索一下 MDN 文档, 可能这些函数已经存在了。",
        "例如： Math.random() 会返回指定范围内的一个随机数， 而 Math.round() 会把输入值转换为最接近的整数。",
        "当我在做Free Code Camp 的前端项目the random quote generator的时候使用了 Math.random() ",
        "当你在处理数字的时候, 请记住JS有一个叫做'floating-point format'的有趣属性。",
        "根据数值的数量、 数值的大小、 数值的计算, JS 的返回可能会有.00004的误差。",
        "有一些办法可以解决它, 并且通常情况下，它并不会造成麻烦, 但是当你遇到一些莫名其妙的问题时你应该想到它。"
      ],
      "challengeSeed": [
        "137081785"
      ],
      "tests": [
        [
          "当谈及JavaScript中的 Math 时, 所有的函数和方法会像它们在其他计算器上一样起作用。",
          false,
          "记住 'floating-point format'."
        ],
        [
          "'Math' 对象有许多特定的函数和方法。",
          true
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f315186",
      "title": "JavaScript Lingo: Loops",
      "description": [
        "如果有一组数据, (我们将会以数组为例，但这并不是必须的,) 并且你想对数组中的每个元素应用相同的操作, 你可以使用循环",
        "循环的语法对新手来说可能很复杂, 但是一旦你掌握它，它们会特别有用. 我在许多算法解决中应用了循环。",
        "你不必理解这里的所有一切 - 只需要知道当你想要处理一组数据时，循环可以大幅度减少你的工作量就好。"
      ],
      "challengeSeed": [
        "137082032"
      ],
      "tests": [
        [
          "循环只有一种",
          false,
          "有许多种循环来满足不同的需要。"
        ],
        [
          "循环只能用来操作数组",
          false,
          "循环可以被应用于许多解决方案。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    },
    {
      "id": "56b15f15632298c12f315185",
      "title": "JavaScript Lingo: Regular Expressions",
      "description": [
        "正则（RegExp） 并不像JS中的其他东西一样, 它有陡峭的学习曲线",
        "正则会是非常有用并且有效率的工具",
        "使用正则，你可以匹配、替换、搜索和分离复杂字符串",
        "如其他的视频一样, 我们不会注重细节, 但是我会介绍一些正则表达式来证明它们的价值。",
        "当你想要创建一个注册页， 验证密码需要包含至少一个数字和大写字母, 你可以使用正则",
        "当你想要确保输入页面的日期都是未来的有效日期, 你可以使用正则。",
        "应用正则表达式的场合没有什么限制, 大多数情况下会在验证和自动编辑数据时使用。"
      ],
      "challengeSeed": [
        "137082304"
      ],
      "tests": [
        [
          "正则表达式对处理字符串非常有用。 ",
          true
        ],
        [
          "正则表达式是令人生畏的，如果你不喜欢它, 你可以尽量避免使用它。",
          false,
          "对正则有点耐心，对你自己也要有耐心。 它会帮助你减少你所需要写的代码量。"
        ]
      ],
      "type": "hike",
      "challengeType": 6
    }
  ]
}
